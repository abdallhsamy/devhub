  
name: Tests

on: ['push', 'pull_request']

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    env:
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: password
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redisl
      SESSION_DRIVER: redis
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=laravel --entrypoint sh mysql:8 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password"
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        php: ['7.4', '8.0']
        dependency-version: [prefer-lowest, prefer-stable]

    name: PHP ${{ matrix.php }} - ${{ matrix.os }} - ${{ matrix.dependency-version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Start mysql service
      run: sudo /etc/init.d/mysql start

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        tools: composer:v2
        coverage: none

    - name: Setup Problem Matches
      run: |
        echo "::add-matcher::${{ runner.tool_cache }}/php.json"
        echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
    - name: Install PHP 7 dependencies
      run: composer update --${{ matrix.dependency-version }} --no-interaction --no-progress
      if: "matrix.php < 8"

    - name: Install PHP 8 dependencies
      run: composer update --${{ matrix.dependency-version }} --ignore-platform-req=php --no-interaction --no-progress
      if: "matrix.php >= 8"

    - name: Unit Tests
      run: ./vendor/bin/pest --colors=always
